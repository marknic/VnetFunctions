{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
            }
        },
        "appComputeSkuName": {
            "type": "string",
            "defaultValue": "EP2",
            "allowedValues": [
                "EP1",
                "EP2",
                "EP3"
            ],
            "metadata": {
                "description": "Premium Function compute size."
            }
        },
        "storageSkuName": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Specifies the sku name for the storage account."
            }
        },
        "networkAclsBypass": {
            "type": "string",
            "defaultValue": "AzureServices",
            "allowedValues": [
                "AzureServices",
                "Logging",
                "Metrics",
                "None"
            ],
            "metadata": {
                "description": "Specifies whether traffic is bypassed by the indicated service."
            }
        },
        "appName": {
            "type": "string",
            "defaultValue": "[concat('fnapp', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "runtime": {
            "type": "string",
            "defaultValue": "node",
            "allowedValues": [
                "node",
                "dotnet",
                "java",
                "python",
                "powershell"
            ],
            "metadata": {
                "description": "The language worker runtime to load in the function app."
            }
        },
        "networkAclsDefaultAction": {
            "type": "string",
            "defaultValue": "Allow",
            "allowedValues": [
                "Allow",
                "Deny"
            ],
            "metadata": {
                "description": "Specifies the default action of allow or deny when no other rules match."
            }
        },
        "logAnalyticsWsId": {
            "type": "string",
            "metadata": {
                "description": "Name of the Log Analytics Workspace where all logs should be sent"
            }
        }
    },
    "variables": {
        "functionAppName": "[parameters('appName')]",
        "uniquePrefix": "[concat(variables('functionAppName'), substring(uniquestring(resourceGroup().id), 0, 4))]",
        "hostingPlanName": "[concat(variables('uniquePrefix'), '-ASP')]",
        "applicationInsightsName": "[concat(variables('uniquePrefix'), '-AI')]",
        "storageAccountNameTmp": "[concat(variables('uniquePrefix'), 'sat')]",
        "storageAccountName": "[concat(variables('uniquePrefix'), 'sa')]",
        "fileShareName": "[concat(variables('storageAccountName'), 'fshr')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-01-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageSkuName')]"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "[parameters('networkAclsBypass')]",
                    "defaultAction": "[parameters('networkAclsDefaultAction')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('fileShareName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-01-01",
            "name": "[variables('storageAccountNameTmp')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageSkuName')]"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "[parameters('networkAclsBypass')]",
                    "defaultAction": "[parameters('networkAclsDefaultAction')]"
                }
            }
        },
        {
            "type": "microsoft.insights/components",
            "kind": "web",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
            },
            "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[parameters('logAnalyticsWsId')]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('appComputeSkuName')]",
                "tier": "ElasticPremium",
                "capacity": 1,
                "size": "[parameters('appComputeSkuName')]"
            },
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": true,
                "maximumElasticWorkerCount": 20
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('uniquePrefix')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameTmp'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountNameTmp'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountNameTmp'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~10"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[parameters('runtime')]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "storageAccountResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "location": {
            "type": "string",
            "value": "[parameters('location')]"
        }
    }
}